server:
  port: 9999
  max-http-header-size: 88888
  #session:
  #  timeout: 
  

spring:
  application:
    name: eureka

eureka:
  server:
    #enable-self-preservation: false       # 关闭自我保护模式（缺省为打开）
    eviction-interval-timer-in-ms: 5000 #续期时间，即扫描失效服务的间隔时间（缺省为60*1000ms）每隔5秒驱逐已经下线的服务
  instance:
    hostname: localhost
  client:
    registerWithEureka: true
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
           
zuul:
  #prefix: /zuul #为zuul设置一个公共的前缀
  #ignoredServices: '*'
  routes:
    outerserviceone: #随便定义，当不存在serviceId时，默认该值为serviceId（就是注册服务的名称，属性spring.application.name）
      path: /outer/** #匹配/zuul/one/** 均路由到outerserviceone
      #strip-prefix: false
      serviceId: outerserviceone #指定路由到的serviceId
    order:
      path: /order/**
      #strip-prefix: false
      service-id: order
    stock:
      path: /stock/**
      #strip-prefix: false
      service-id: stock
ribbon:
  eureka:
    enabled: false #配置zuul路由时用将此属性设置为false

outerserviceone:
  ribbon:
    listOfServers: 127.0.0.1:9998,127.0.0.1:9988 #为outerserviceone服务指定一组服务地址，应该是用于负载均衡
    
order:
  ribbon:
    listOfServers: 127.0.0.1:9997 #为service1服务指定一组服务地址，应该是用于负载均衡
stock:
  ribbon:
    listOfServers: 127.0.0.1:9996 #为service1服务指定一组服务地址，应该是用于负载均衡